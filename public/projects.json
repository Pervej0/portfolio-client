[
  {
    "projectName": "Glass Shop",
    "projectType": "Full stack web application",
    "category": ["Sunglass", "Fashion"],
    "technologies": [
      "Html",
      "Css",
      "React",
      "Firebase",
      "React Router",
      "Node.js",
      "Express",
      "MongodB atlas"
    ],
    "bannerImg": "https://i.ibb.co/wK0K24V/Optimized-project-1.jpg",

    "images": [
      "https://i.ibb.co/DtDTJy2/Optimized-project-Details-1.jpg",
      "https://i.ibb.co/6PgrTr5/Optimized-dashboard.jpg",
      "https://i.ibb.co/NYfHF4q/Optimized-contact-Us.jpg",
      "https://i.ibb.co/fvDkpkS/Optimized-manage-Orders.jpg"
    ],
    "liveSite": "https://niche-products.firebaseapp.com/",
    "clientCode": "https://github.com/Pervej0/glass-store-client",
    "serverCode": "https://github.com/Pervej0/glass-store-server",
    "description": [
      "Build front-end with JavaScript/React/Tailwind and others packages. And developed backend and database with Node.js/Express/Mongo dB atlas.",
      "Implemented dual dashboard for admin and user (to see admin panel login with: admin@admin.com/123456).",
      "On the user dashboard they would be able to view & delete their previous ordered product. And also, all give their feedback on the “Add Review” page."
    ]
  },
  {
    "projectName": "Knock Knock Service Center (KKSC)",
    "projectType": "Full stack web application",
    "category": ["Delivary", "Courier Service"],
    "technologies": [
      "Html",
      "Css",
      "React",
      "Firebase",
      "React Router",
      "Node.js",
      "Express",
      "MongodB atlas"
    ],

    "bannerImg": "https://i.ibb.co/rMYDyB7/Optimized-project-2.jpg",
    "images": [
      "https://i.ibb.co/6NwbVZL/Optimized-project-Details-2.jpg",
      "https://i.ibb.co/6s8VNpp/Optimized-about-Us.jpg",
      "https://i.ibb.co/jMs9fJh/Optimized-add-Product.jpg"
    ],
    "liveSite": "https://knock-kncok-ceb54.firebaseapp.com/",
    "clientCode": "https://github.com/Pervej0/knock-knock-client",
    "serverCode": "https://github.com/Pervej0/knock-kncok-server",
    "description": [
      "JavaScript/React/MongoDB based goods delivery site implemented also firebase authentication.",
      "Simple error handling while user wants to signup/sign in. Users data store in MongoDB atlas through node.js/express rest API. ",
      "User can create signup/sign in and see their orders on the “My Order” page."
    ]
  },
  {
    "projectName": "getWell C.C.",
    "projectType": "Front-end base application",
    "category": ["Medical", "Clinic", "Hospital"],
    "technologies": ["Html", "Css", "React", "Firebase", "React Router"],

    "images": [
      "https://i.ibb.co/jVBJ0mM/Optimized-project-Details-4.jpg",
      "https://i.ibb.co/pvCLqMk/Optimized-get-Well-Contact.jpg",
      "https://i.ibb.co/x1ZFvKf/Optimized-get-Well-About.jpg"
    ],
    "bannerImg": "https://i.ibb.co/FwTSWN9/Optimized-project-3.jpg",
    "liveSite": "https://getwell-clinic-center.web.app/",
    "clientCode": "https://github.com/Pervej0/getWell-clinic-center",
    "serverCode": "",
    "description": [
      "Front-end targeted clinic center web application which authentication accomplished by firebase and also handled basic errors",
      "User can able to register/sign in with third-party providers Facebook & Google",
      "Private protected route designed and good user experience focused"
    ]
  },
  {
    "projectName": "World Learner",
    "projectType": "Front-end application",
    "category": ["Coaching Center", "Eduaction"],
    "technologies": ["Html", "Css", "Tailwind", "React", "React Router"],
    "images": [
      "https://i.ibb.co/dBr41Bc/Optimized-project-Details-3.jpg",
      "https://i.ibb.co/TRzL7q3/Optimized-world-Learner-About.jpg",
      "https://i.ibb.co/GM1rhq1/Optimized-world-Learner-Service.jpg"
    ],
    "bannerImg": "https://i.ibb.co/J7MYtTz/Optimized-project-4.jpg",
    "liveSite": "https://worldlearner.netlify.app/",
    "clientCode": "https://github.com/Pervej0/world-learner-client",
    "serverCode": "",
    "description": [
      "Build this application focused on it's look. It hast total four pages impleamented by react router dom",
      "User can see Service details information form service packages."
    ]
  }
]
